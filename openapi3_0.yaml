openapi: 3.0.3
info:
  title: BIONIC
  description: |-
    
    Some useful links:
    - [Frontend repository.](https://github.com/kasia251011/car-app-frontend)
    - [Backend repository - server.](https://github.com/RosekKokosowy/BIONIC---server)
    - [Backend repository - microservice responsible for comparing cars.](https://github.com/RosekKokosowy/BIONIC---microservice_compare_cars)
    - [Backend repository - microservice responsible for selecting cars from database that are used during quiz.](https://github.com/RosekKokosowy/BIONIC---microservice_select_cars)
    - [Backend repository - microservice responsible for establishing priorities of the user based on the quiz.](https://github.com/RosekKokosowy/BIONIC---microservice_establish_priorities)
  termsOfService: http://swagger.io/terms/
  contact:
    email: 235847@edu.p.lodz.pl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
# servers:
#   - url: https://petstore3.swagger.io/api/v3
tags:
  - name: car
    description: Car comparison
  # - name: store
  #   description: Access to Petstore orders
  #   externalDocs:
  #     description: Find out more about our store
  #     url: http://swagger.io
  # - name: user
  #   description: Operations about user
paths:
  /car/compare:
    post:
      tags:
        - car
      summary: Request better car (client-server)
      description: Requesting a comparison from a server about the car objects user has provided. 
      operationId: client-server-post-compare
      requestBody:
        description: List of the cars to compare
        content:
          application/json:
           schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
                minItems: 2
                maxItems: 2 
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarId'
        '405':
          description: Invalid input
        '500':
          description: Internal error
  /car/priorities:
    post:
      tags:
        - car
      summary: Post priorities
      description: Post priorities of car parameters that was set maunal
      operationId:  client-server-post-priorities
      requestBody: 
        description: Priorities of car parameters
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/ParametersWeight'
      responses: 
        '200':
          description: Successful operation
        '405':
          description: Invalid input
        '500':
          description: Internal error
        
  /car/compare/comparison:
    post:
      tags:
        - car
      summary: (server - microservice)
      description: Requesting a comparison from a microservice_compare_cars about the objects user has provided. 
      operationId: server-microservice_compare_cars-post-compare
      requestBody:
        description: Comparing cars by the priorities provided by the user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
          application/xml:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarId'          
            application/xml:
              schema:
                $ref: '#/components/schemas/CarId'
        '405':
          description: Invalid input
        '500':
          description: Internal error
  /quiz:
    get:
      tags:
        - quiz
      summary: Pair of cars for quiz (client - server)
      description: Pair of cars for quiz
      operationId: client-server-get-quiz
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
                minItems: 2
                maxItems: 2  
        '405':
          description: Invalid input
        '500':
          description: Internal error
    patch:
      tags:
        - quiz
      summary: Pass chosen car from a single quiz (client - server)
      description: Pass chosen car from a single quiz. It will be stored until the quiz is finished.
      operationId: client-server-patch-quiz
      requestBody:
        description: Id of the car that the user selected.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarId'
        required: true
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
        '500':
          description: Internal error
    delete:
      tags:
        - quiz
      summary: Cancel current quiz (client - server)
      description: Cancel current quiz
      operationId: client-server-delete-quiz
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
        '500':
          description: Internal error
  /quiz/selection:
    get:
      tags:
        - quiz
      summary: (server - microservice)
      description: Requesting an array of cars selected for comparison.
      operationId: server-microservice_select_cars-get-quiz
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
                minItems: 20
                maxItems: 20  
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
                minItems: 20
                maxItems: 20
        '405':
          description: Invalid input
        '500':
          description: Internal error
  /quiz/priorities:
    post:
      tags:
        - quiz
      summary: (server - microservice)
      description: Establishing the importance of car's parameters.
      operationId: server-microservice_establish_priorities-post-quiz
      requestBody:
        description: Passing user's choices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/QuizInfo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParametersWeight' 
            application/xml:
              schema:
                $ref: '#/components/schemas/ParametersWeight' 
        '405':
          description: Invalid input
        '500':
          description: Internal error
  /quiz/result:
    get:
      tags:
        - quiz
      summary:  Request importance of car's parameters (client - server)
      description: Request importance of car's parameters based on quiz.
      operationId: client-server-get-quiz-result
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParametersWeight' 
        '405':
          description: Invalid input
        '500':
          description: Internal error
components:
  schemas:
    CarParameters:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        yearOfManufacture:
          type: integer
          format: int32
          example: 2010
        mileage:
          type: number
          format: float
          example: 17.8
        price:
          type: number
          format: float
          example: 17000
        horsePower:
          type: integer
          format: int32
          example: 205
        typeOfFuel:
          type: string
          example: GAS
          enum:
            - GAS
            - PETROL
            - DIESEL
            - ELECTRIC
            - HYDROGEN
        gearBox:
          type: string
          example: MANUAL
          enum:
            - MANUAL
            - AUTOMATIC
      required:
        - id
        - yearOfManufacture
        - price
        - horsePower
        - typeOfFuel
        - gearBox
        - wheelDrive
    Car:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: Skoda Octavia
        img:
          type: string
        parameters:
          $ref: '#/components/schemas/CarParameters'
      required:
        - id
    ParametersWeight:
      type: object
      properties:
        yearOfManufacture:
          type: number
          format: double
        mileage:
          type: number
          format: double
        price:
          type: number
          format: double
        horsePower:
          type: number
          format: double
        typeOfFuel:
          type: number
          format: double
        gearBox:
          type: number
          format: double
    CarId:
      type: object
      properties:
        id:
          type: integer
          format: int32
      required:
        - id
    QuizInfo:
      type: object
      properties:
        cars:
          type: array
          items:
            $ref: '#/components/schemas/Car'
        choices:
          type: array
          items:
            $ref: '#/components/schemas/CarId'
